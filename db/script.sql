CREATE TABLE usuarios (
  user_id BIGINT NOT NULL AUTO_INCREMENT,
  nome VARCHAR(255) NOT NULL,
  img_url VARCHAR(150) NOT NULL,
  cpf VARCHAR(11) NOT NULL,
  data_criacao DATETIME NOT NULL,
  ativo BOOLEAN NOT NULL,
  validado BOOLEAN NOT NULL,
  senha VARCHAR(60) NOT NULL,

  CONSTRAINT PK_USURARIO_USUARIOID PRIMARY KEY (user_id),
  CONSTRAINT UK_USUARIO_CPF UNIQUE (cpf),
  CONSTRAINT CK_USUARIO_ATIVO CHECK (ativo IN (0, 1)),
  CONSTRAINT CK_USUARIO_VALIDADO CHECK (validado IN (0, 1)),
  CONSTRAINT CK_USUARIO_DATA_CRIACAO CHECK (data_criacao <= CURRENT_TIMESTAMP()),
  CONSTRAINT CK_USUARIO_NOME CHECK (nome IS NOT NULL AND nome != ''),
  CONSTRAINT CK_USUARIO_IMG_URL CHECK (img_url IS NOT NULL AND img_url != ''),
  CONSTRAINT CK_USUARIO_CPF CHECK (cpf IS NOT NULL AND cpf != '')
  CONSTRAINT CK_USUARIO_SENHA CHECK (senha IS NOT NULL AND senha != '' AND senha REGEXP '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\$%\^&\*])(?=.{8,})'),
);

CREATE TABLE enderecos (
  end_id BIGINT NOT NULL AUTO_INCREMENT,
  rua VARCHAR(60) NOT NULL,
  numero INT NOT NULL,
  bairro VARCHAR(60) NOT NULL,
  cidade VARCHAR(60) NOT NULL,
  estado VARCHAR(2) NOT NULL,
  cep VARCHAR(8) NOT NULL,
  tipo ENUM('RESIDENCIAL', 'COMERCIAL', 'CASA', 'TRABALHO') NOT NULL,

  CONSTRAINT PK_ENDERECO_ENDID PRIMARY KEY (end_id),
);

CREATE TABLE usuario_enderecos (
  user_id BIGINT NOT NULL,
  end_id BIGINT NOT NULL,

  CONSTRAINT PK_USUARIOENDERECOS_USERIDENDID PRIMARY KEY (user_id, end_id),
  CONSTRAINT FK_USUARIOENDERECOS_USERID FOREIGN KEY (user_id) REFERENCES usuarios(user_id),
  CONSTRAINT FK_USUARIOENDERECOS_ENDID FOREIGN KEY (end_id) REFERENCES enderecos(end_id),
);

CREATE TABLE comerciantes (
  com_id BIGINT NOT NULL AUTO_INCREMENT,
  razao_social VARCHAR(70) NOT NULL,
  img_url VARCHAR(150) NOT NULL,
  cnpj VARCHAR(14) NOT NULL,
  data_criacao DATETIME NOT NULL,
  ativo BOOLEAN NOT NULL,
  validado BOOLEAN NOT NULL,
  email VARCHAR(60) NOT NULL,
  senha VARCHAR(60) NOT NULL,
  valor_minimo_entrega DECIMAL(10, 2) NOT NULL,

  CONSTRAINT PK_COMERCIANTE_COMID PRIMARY KEY (com_id),
  CONSTRAINT UK_COMERCIANTE_CNPJ UNIQUE (cnpj),
  CONSTRAINT CK_COMERCIANTE_ATIVO CHECK (ativo IN (0, 1)),
  CONSTRAINT CK_COMERCIANTE_VALIDADO CHECK (validado IN (0, 1)),
  CONSTRAINT CK_COMERCIANTE_DATA_CRIACAO CHECK (data_criacao <= CURRENT_TIMESTAMP()),
  CONSTRAINT CK_COMERCIANTE_RAZAO_SOCIAL CHECK (razao_social IS NOT NULL AND razao_social != ''),
  CONSTRAINT CK_COMERCIANTE_IMG_URL CHECK (img_url IS NOT NULL AND img_url != ''),
  CONSTRAINT CK_COMERCIANTE_CNPJ CHECK (cnpj IS NOT NULL AND cnpj != ''),
  CONSTRAINT CK_COMERCIANTE_EMAIL CHECK (email IS NOT NULL AND email != ''),
   
  CONSTRAINT CK_COMERCIANTE_SENHA CHECK (senha IS NOT NULL AND senha != '' AND senha REGEXP '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\$%\^&\*])(?=.{8,})'),
);

CREATE TABLE comerciante_enderecos (
  com_id BIGINT NOT NULL,
  end_id BIGINT NOT NULL,

  CONSTRAINT PK_COMERCIANTEENDERECOS_COMIDENDID PRIMARY KEY (com_id, end_id),
  CONSTRAINT FK_COMERCIANTEENDERECOS_COMID FOREIGN KEY (com_id) REFERENCES comerciantes(com_id),
  CONSTRAINT FK_COMERCIANTEENDERECOS_ENDID FOREIGN KEY (end_id) REFERENCES enderecos(end_id),
);

CREATE TABLE telelfones (
  tel_id BIGINT NOT NULL AUTO_INCREMENT,
  numero VARCHAR(11) NOT NULL,
  tipo ENUM('CELULAR', 'FIXO') NOT NULL,

  CONSTRAINT PK_TELEFONES_TELID PRIMARY KEY (tel_id),
  CONSTRAINT CK_TELEFONES_NUMERO CHECK (numero IS NOT NULL AND numero != ''),
  CONSTRAINT CK_TELEFONES_TIPO CHECK (tipo IN ('CELULAR', 'FIXO')),
);

CREATE TABLE usuario_telefones (
  user_id BIGINT NOT NULL,
  tel_id BIGINT NOT NULL,

  CONSTRAINT PK_USUARIOTELEFONES_USERIDTELID PRIMARY KEY (user_id, tel_id),
  CONSTRAINT FK_USUARIOTELEFONES_USERID FOREIGN KEY (user_id) REFERENCES usuarios(user_id),
  CONSTRAINT FK_USUARIOTELEFONES_TELID FOREIGN KEY (tel_id) REFERENCES telelfones(tel_id),
);

CREATE TABLE comerciante_telefones (
  com_id BIGINT NOT NULL,
  tel_id BIGINT NOT NULL,

  CONSTRAINT PK_COMERCIANTETELEFONES_COMIDTELID PRIMARY KEY (com_id, tel_id),
  CONSTRAINT FK_COMERCIANTETELEFONES_COMID FOREIGN KEY (com_id) REFERENCES comerciantes(com_id),
  CONSTRAINT FK_COMERCIANTETELEFONES_TELID FOREIGN KEY (tel_id) REFERENCES telelfones(tel_id),
);