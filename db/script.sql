USE `ecommerce`;

CREATE TABLE usuarios (
  user_id BIGINT NOT NULL AUTO_INCREMENT,
  nome VARCHAR(255) NOT NULL,
  img_url VARCHAR(150) NOT NULL,
  cpf VARCHAR(11) NOT NULL,
  data_modifacao DATETIME NOT NULL,
  ativo BOOLEAN NOT NULL,
  validado BOOLEAN NOT NULL,
  senha VARCHAR(60) NOT NULL,

  CONSTRAINT PK_USURARIO_USUARIOID PRIMARY KEY (user_id),
  CONSTRAINT UK_USUARIO_CPF UNIQUE (cpf),
  CONSTRAINT CK_USUARIO_ATIVO CHECK (ativo IN (0, 1)),
  CONSTRAINT CK_USUARIO_VALIDADO CHECK (validado IN (0, 1)),
  CONSTRAINT CK_USUARIO_data_modifacao CHECK (data_modifacao <= CURRENT_TIMESTAMP()),
  CONSTRAINT CK_USUARIO_NOME CHECK (nome IS NOT NULL AND nome != ''),
  CONSTRAINT CK_USUARIO_IMG_URL CHECK (img_url IS NOT NULL AND img_url != ''),
  CONSTRAINT CK_USUARIO_CPF CHECK (cpf IS NOT NULL AND cpf != ''),
  CONSTRAINT CK_USUARIO_SENHA CHECK (senha IS NOT NULL AND senha != '' AND senha REGEXP '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\$%\^&\*])(?=.{8,})')
);

CREATE TABLE enderecos (
  end_id BIGINT NOT NULL AUTO_INCREMENT,
  rua VARCHAR(60) NOT NULL,
  numero INT NOT NULL,
  bairro VARCHAR(60) NOT NULL,
  cidade VARCHAR(60) NOT NULL,
  estado VARCHAR(2) NOT NULL,
  cep VARCHAR(8) NOT NULL,
  tipo ENUM('RESIDENCIAL', 'COMERCIAL', 'CASA', 'TRABALHO') NOT NULL,

  CONSTRAINT PK_ENDERECO_ENDID PRIMARY KEY (end_id)
);

CREATE TABLE usuario_enderecos (
  user_id BIGINT NOT NULL,
  end_id BIGINT NOT NULL,

  CONSTRAINT PK_USUARIOENDERECOS_USERIDENDID PRIMARY KEY (user_id, end_id),
  CONSTRAINT FK_USUARIOENDERECOS_USERID FOREIGN KEY (user_id) REFERENCES usuarios(user_id),
  CONSTRAINT FK_USUARIOENDERECOS_ENDID FOREIGN KEY (end_id) REFERENCES enderecos(end_id)
);

CREATE TABLE comerciantes (
  com_id BIGINT NOT NULL AUTO_INCREMENT,
  razao_social VARCHAR(70) NOT NULL,
  img_url VARCHAR(150) NOT NULL,
  cnpj VARCHAR(14) NOT NULL,
  data_modifacao DATETIME NOT NULL,
  ativo BOOLEAN NOT NULL,
  validado BOOLEAN NOT NULL,
  email VARCHAR(60) NOT NULL,
  senha VARCHAR(60) NOT NULL,
  valor_minimo_entrega DECIMAL(10, 2) NOT NULL,
  tipo ENUM('SUPERMERCADO', 'HORTIFRUTI', 'AÇOUGUE', 'PADARIA', 'SORVETERIA') NOT NULL,

  CONSTRAINT PK_COMERCIANTE_COMID PRIMARY KEY (com_id),
  CONSTRAINT UK_COMERCIANTE_CNPJ UNIQUE (cnpj),
  CONSTRAINT CK_COMERCIANTE_ATIVO CHECK (ativo IN (0, 1)),
  CONSTRAINT CK_COMERCIANTE_VALIDADO CHECK (validado IN (0, 1)),
  CONSTRAINT CK_COMERCIANTE_data_modifacao CHECK (data_modifacao <= CURRENT_TIMESTAMP()),
  CONSTRAINT CK_COMERCIANTE_RAZAO_SOCIAL CHECK (razao_social IS NOT NULL AND razao_social != ''),
  CONSTRAINT CK_COMERCIANTE_IMG_URL CHECK (img_url IS NOT NULL AND img_url != ''),
  CONSTRAINT CK_COMERCIANTE_CNPJ CHECK (cnpj IS NOT NULL AND cnpj != ''),
  CONSTRAINT CK_COMERCIANTE_EMAIL CHECK (email IS NOT NULL AND email != ''),
  CONSTRAINT CK_COMERCIANTE_VALOR_MINIMO_ENTREGA CHECK (valor_minimo_entrega >= 0),
  CONSTRAINT CK_COMERCIANTE_TIPO CHECK (tipo IN ('SUPERMERCADO', 'HORTIFRUTI', 'AÇOUGUE', 'PADARIA', 'SORVETERIA')),
  CONSTRAINT CK_COMERCIANTE_SENHA CHECK (senha IS NOT NULL AND senha != '' AND senha REGEXP '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\$%\^&\*])(?=.{8,})')
);

CREATE TABLE comerciante_enderecos (
  com_id BIGINT NOT NULL,
  end_id BIGINT NOT NULL,

  CONSTRAINT PK_COMERCIANTEENDERECOS_COMIDENDID PRIMARY KEY (com_id, end_id),
  CONSTRAINT FK_COMERCIANTEENDERECOS_COMID FOREIGN KEY (com_id) REFERENCES comerciantes(com_id),
  CONSTRAINT FK_COMERCIANTEENDERECOS_ENDID FOREIGN KEY (end_id) REFERENCES enderecos(end_id)
);

CREATE TABLE telelfones (
  tel_id BIGINT NOT NULL AUTO_INCREMENT,
  numero VARCHAR(11) NOT NULL,
  tipo ENUM('CELULAR', 'FIXO') NOT NULL,

  CONSTRAINT PK_TELEFONES_TELID PRIMARY KEY (tel_id),
  CONSTRAINT CK_TELEFONES_NUMERO CHECK (numero IS NOT NULL AND numero != ''),
  CONSTRAINT CK_TELEFONES_TIPO CHECK (tipo IN ('CELULAR', 'FIXO'))
);

CREATE TABLE usuario_telefones (
  user_id BIGINT NOT NULL,
  tel_id BIGINT NOT NULL,

  CONSTRAINT PK_USUARIOTELEFONES_USERIDTELID PRIMARY KEY (user_id, tel_id),
  CONSTRAINT FK_USUARIOTELEFONES_USERID FOREIGN KEY (user_id) REFERENCES usuarios(user_id),
  CONSTRAINT FK_USUARIOTELEFONES_TELID FOREIGN KEY (tel_id) REFERENCES telelfones(tel_id)
);

CREATE TABLE comerciante_telefones (
  com_id BIGINT NOT NULL,
  tel_id BIGINT NOT NULL,

  CONSTRAINT PK_COMERCIANTETELEFONES_COMIDTELID PRIMARY KEY (com_id, tel_id),
  CONSTRAINT FK_COMERCIANTETELEFONES_COMID FOREIGN KEY (com_id) REFERENCES comerciantes(com_id),
  CONSTRAINT FK_COMERCIANTETELEFONES_TELID FOREIGN KEY (tel_id) REFERENCES telelfones(tel_id)
);

CREATE TABLE avaliacoes (
  ava_id BIGINT NOT NULL AUTO_INCREMENT,
  rate FLOAT NOT NULL,
  data_modifacao DATE NOT NULL,
  conteudo TEXT NULL,
  user_id BIGINT NOT NULL,
  com_id BIGINT NOT NULL,

  CONSTRAINT PK_AVALIACOES_AVAID PRIMARY KEY (ava_id),
  CONSTRAINT CK_AVALIACOES_RATE CHECK (rate >= 0 AND rate <= 5),
  CONSTRAINT CK_AVALIACOES_data_modifacao CHECK (data_modifacao <= CURRENT_TIMESTAMP()),
  CONSTRAINT CK_AVALIACOES_CONTEUDO CHECK (conteudo IS NOT NULL AND conteudo != ''),
  CONSTRAINT FK_AVALIACOES_USERID FOREIGN KEY (user_id) REFERENCES usuarios(user_id),
  CONSTRAINT FK_AVALIACOES_COMID FOREIGN KEY (com_id) REFERENCES comerciantes(com_id)
);

CREATE TABLE cartoes (
  car_id BIGINT NOT NULL AUTO_INCREMENT,
  numero VARCHAR(16) NOT NULL,
  validade DATE NOT NULL,
  cvv VARCHAR(3) NOT NULL,
  data_modifacao DATE NOT NULL,
  user_id BIGINT NOT NULL,

  CONSTRAINT PK_CARTOES_CARID PRIMARY KEY (car_id),
  CONSTRAINT CK_CARTOES_NUMERO CHECK (numero IS NOT NULL AND numero != ''),
  CONSTRAINT CK_CARTOES_VALIDADE CHECK (validade >= CURRENT_DATE()),
  CONSTRAINT CK_CARTOES_CVV CHECK (cvv IS NOT NULL AND cvv != ''),
  CONSTRAINT FK_CARTOESUSUARIOS_USERID FOREIGN KEY (user_id) REFERENCES usuarios(user_id)
);

CREATE TABLE categorias (
  cat_id BIGINT NOT NULL AUTO_INCREMENT,
  nome VARCHAR(60) NOT NULL,

  CONSTRAINT PK_CATEGORIAS_CATID PRIMARY KEY (cat_id),
  CONSTRAINT CK_CATEGORIAS_NOME CHECK (nome IS NOT NULL AND nome != '')
);

CREATE TABLE produtos (
  prod_id BIGINT NOT NULL AUTO_INCREMENT,
  nome VARCHAR(60) NOT NULL,
  valor_venda DECIMAL(10,2) NOT NULL,
  valor_custo DECIMAL(10,2) NOT NULL,
  descricao TEXT NOT NULL,
  img_url VARCHAR(150) NOT NULL,
  unidade ENUM ('UN', 'KG', 'L', 'M', 'CM', 'MM') NOT NULL,
  data_modifacao DATE NOT NULL,

  CONSTRAINT PK_PRODUTOS_PROID PRIMARY KEY (prod_id),
  CONSTRAINT CK_PRODUTOS_NOME CHECK (nome IS NOT NULL AND nome != ''),
  CONSTRAINT CK_PRODUTOS_PRECO CHECK (preco >= 0),
  CONSTRAINT CK_PRODUTOS_DESCRICAO CHECK (descricao IS NOT NULL AND descricao != ''),
  CONSTRAINT CK_PRODUTOS_IMG_URL CHECK (img_url IS NOT NULL AND img_url != ''),
  CONSTRAINT CK_PRODUTOS_UNIDADE CHECK (unidade IN ('UN', 'KG', 'L', 'M', 'CM', 'MM')),
  CONSTRAINT CK_PRODUTOS_data_modifacao CHECK (data_modifacao <= CURRENT_TIMESTAMP())
);

CREATE TABLE produtos_categoria (
  prod_id BIGINT NOT NULL,
  cat_id BIGINT NOT NULL,

  CONSTRAINT PK_PRODUTOS_CATEGORIAS_PRODIDCATID PRIMARY KEY (prod_id, cat_id),
  CONSTRAINT FK_PRODUTOS_CATEGORIAS_PRODID FOREIGN KEY (prod_id) REFERENCES produtos(prod_id),
  CONSTRAINT FK_PRODUTOS_CATEGORIAS_CATID FOREIGN KEY (cat_id) REFERENCES categorias(cat_id)

);

CREATE TABLE pedidos (
  ped_id BIGINT NOT NULL AUTOdata_INCREMENT,
  subtotal DECIMAL(10,2) NOT NULL,
  data_pedido DATE NOT NULL,
  data_recebimento DATE NOT NULL,
  obs TEXT NOT NULL,
  user_id BIGINT NOT NULL,
  end_id BIGINT NOT NULL,

  CONSTRAINT PK_PEDIDOS_PEDID PRIMARY KEY (ped_id),
  CONSTRAINT CK_PEDIDOS_SUBTOTAL CHECK (subtotal >= 0),
  CONSTRAINT CK_PEDIDOS_DATA_PEDIDO CHECK (data_pedido <= CURRENT_TIMESTAMP()),
  CONSTRAINT CK_PEDIDOS_DATA_RECEBIMENTO CHECK (data_recebimento >= CURRENT_TIMESTAMP()),
  CONSTRAINT CK_PEDIDOS_OBS CHECK (obs IS NOT NULL AND obs != ''),
  CONSTRAINT FK_PEDIDOS_USERID FOREIGN KEY (user_id) REFERENCES usuarios(user_id),
  CONSTRAINT FK_PEDIDOS_ENDID FOREIGN KEY (end_id) REFERENCES enderecos(end_id)

);
CREATE TABLE pedido_produto (
  ped_id BIGINT NOT NULL,
  prod_id BIGINT NOT NULL,
  quantidade INT NOT NULL,

  CONSTRAINT PK_PEDIDO_PRODUTO_PEDIDPRODID PRIMARY KEY (ped_id, prod_id),
  CONSTRAINT CK_PEDIDO_PRODUTO_QUANTIDADE CHECK (quantidade >= 0),
  CONSTRAINT FK_PEDIDO_PRODUTO_PEDID FOREIGN KEY (ped_id) REFERENCES pedidos(ped_id),
  CONSTRAINT FK_PEDIDO_PRODUTO_PRODID FOREIGN KEY (prod_id) REFERENCES produtos(prod_id)

);

CREATE TABLE transacoes (
  trans_id BIGINT NOT NULL AUTO_INCREMENT,
  valor DECIMAL(10,2) NOT NULL,
  tipo ENUM('Cartão', 'Pix', 'Dinheiro') NOT NULL,
  status_trans ENUM('PROCESSANDO', 'APROVADO', 'REPROVADO') NOT NULL,

  CONSTRAINT PK_TRANSACOES_TRANSID PRIMARY KEY (trans_id),
  CONSTRAINT CK_TRANSACOES_VALOR CHECK (valor >= 0),
  CONSTRAINT CK_TRANSACOES_TIPO CHECK (tipo IN ('Cartão', 'Pix', 'Dinheiro')),
  CONSTRAINT CK_TRANSACOES_STATUS CHECK (status_trans IN ('PROCESSANDO', 'APROVADO', 'REPROVADO'))

);


CREATE TABLE vendas (
  vend_id BIGINT NOT NULL AUTO_INCREMENT,
  total DECIMAL(10,2) NOT NULL,
  data_venda DATE NOT NULL,
  descontos DECIMAL(10,2) NOT NULL,
  trans_id BIGINT NOT NULL,
  ped_id BIGINT NOT NULL,
  com_id BIGINT NOT NULL,

  CONSTRAINT PK_VENDAS_VENDID PRIMARY KEY (vend_id),
  CONSTRAINT CK_VENDAS_TOTAL CHECK (total >= 0),
  CONSTRAINT CK_VENDAS_DATA_VENDA CHECK (data_venda <= CURRENT_TIMESTAMP()),
  CONSTRAINT CK_VENDAS_DESCONTOS CHECK (descontos >= 0),
  CONSTRAINT FK_VENDAS_TRANSID FOREIGN KEY (trans_id) REFERENCES transacoes (trans_id),
  CONSTRAINT FK_VENDAS_PEDID FOREIGN KEY (ped_id) REFERENCES pedidos (ped_id),
  CONSTRAINT FK_VENDAS_COMID FOREIGN KEY (com_id) REFERENCES comerciantes (com_id)

);

CREATE TABLE entrada_estoque (
  ent_est_id BIGINT NOT NULL AUTO_INCREMENT,
  quantidade INT NOT NULL,
  data_lancamento DATE NOT NULL,
  prod_id BIGINT NOT NULL,
  com_id BIGINT NOT NULL,
  validade DATE NOT NULL,
  lote VARCHAR(20) NOT NULL,

  CONSTRAINT PK_ESTOQUE_LANCAMENTOS_ESTID PRIMARY KEY (est_id),
  CONSTRAINT CK_ESTOQUE_LANCAMENTOS_QUANTIDADE CHECK (quantidade >= 0),
  CONSTRAINT CK_ESTOQUE_LANCAMENTOS_DATA_LANCAMENTO CHECK (data_lancamento <= CURRENT_TIMESTAMP()),
  CONSTRAINT FK_ESTOQUE_LANCAMENTOS_PRODID FOREIGN KEY (prod_id) REFERENCES produtos (prod_id),
  CONSTRAINT FK_ESTOQUE_LANCAMENTOS_COMID FOREIGN KEY (com_id) REFERENCES comerciantes (com_id)
);

CREATE TABLE saida_estoque (
  said_est_id BIGINT NOT NULL AUTO_INCREMENT,
  quantidade INT NOT NULL,
  data_lancamento DATE NOT NULL,
  prod_id BIGINT NOT NULL,
  com_id BIGINT NOT NULL,
  vend_id BIGINT NULL,
  motivo TEXT NULL,

  CONSTRAINT PK_ESTOQUE_SAIDA_ESTID PRIMARY KEY (said_est_id),
  CONSTRAINT CK_ESTOQUE_SAIDA_QUANTIDADE CHECK (quantidade >= 0),
  CONSTRAINT CK_ESTOQUE_SAIDA_DATA_LANCAMENTO CHECK (data_lancamento <= CURRENT_TIMESTAMP()),
  CONSTRAINT CK_ESTOQUE_SAIDA_MOTIVO CHECK (motivo IS NOT NULL AND motivo != ''),
  CONSTRAINT FK_ESTOQUE_SAIDA_PRODID FOREIGN KEY (prod_id) REFERENCES produtos (prod_id),
  CONSTRAINT FK_ESTOQUE_SAIDA_COMID FOREIGN KEY (com_id) REFERENCES comerciantes (com_id),
  CONSTRAINT FK_ESTOQUE_SAIDA_VENDID FOREIGN KEY (vend_id) REFERENCES vendas (vend_id)
);
